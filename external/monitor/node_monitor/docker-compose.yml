version: "3.8"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana-data:

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: "1000:1000"
    volumes:
      # In case if we want to mount volume with a current directory
      - ./prometheus/etc/prometheus:/etc/prometheus
      - ./prometheus/data/prometheus:/data/prometheus
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      # - /etc/prometheus:/etc/prometheus
      # - /data/prometheus:/data/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/data/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    expose:
      - 9090
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:7.5.7
    ports:
      - 3000:3000
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources # This configuration file will tell Grafana about Prometheus. You could omit this and add the configuration via the Grafana UI. You can see its example in ./grafana/provisioning/datasources
      - grafana-data:/var/lib/grafana
